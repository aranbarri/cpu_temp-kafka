version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    restart: always
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=c9d7f6d0-1234-4ad1-8123-51e401ea9fa7
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - /mnt/nvme/kafka_logs:/bitnami/kafka
    command: >
      bash -c "
        if [ ! -f /bitnami/kafka/meta.properties ]; then
          kafka-storage.sh format -t c9d7f6d0-1234-4ad1-8123-51e401ea9fa7 -c /opt/bitnami/kafka/config/server.properties;
        fi &&
        /opt/bitnami/scripts/kafka/run.sh
      "

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

  cpu-temp-producer:
    image: openjdk:17-jdk
    container_name: cpu-temp-producer
    working_dir: /app
    volumes:
      - ./thermal_check:/app
      - /sys/class/thermal/thermal_zone0/temp:/host_thermal/temp:ro
    command: java -jar /app/ThermalCheck.jar
    depends_on:
      - kafka
